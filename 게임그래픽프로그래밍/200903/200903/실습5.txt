#define AxisSize 2000

void SetPos(POINT* _posArr, int* count, int xpos, int ypos)
{
	if (*count >= 10)
		return;
	_posArr[*count].x = xpos;
	_posArr[(*count)++].y = ypos;
}

void ConvertingPos(POINT* _posArr, RECT cRect, int Arrsize)
{
	int CenterX = cRect.right / 2;
	int CenterY = cRect.bottom / 2;
	for (int i = 0; i < Arrsize; i++)
	{
		_posArr[i].x = CenterX + _posArr[i].x;
		_posArr[i].y = CenterY - _posArr[i].y;
	}
}

void SetLinePos(float a, float b, float c, POINT* xArr, int Arrsize)
{
	// y = (c/b) - (a/b)x	x-y=3
	for (int i = 0; i < Arrsize; i++)
	{
		xArr[i].y = (c / b) - ((a / b) * xArr[i].x);
	}
}



LRESULT CALLBACK WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)
{
	HDC hdc;
	PAINTSTRUCT ps;
	static RECT rect;
	static POINT xAxis[AxisSize];
	static POINT yAxis[AxisSize];
	static POINT Line_01[200];
	static POINT Line_02[200];
	static POINT Line_03[200];
	static int i = 0;
	static int idx = -(AxisSize / 2);

	switch (iMessage) 
	{
	case WM_CREATE:
		GetClientRect(hWnd, &rect);

		for (int i = -(AxisSize / 2); i < (AxisSize / 2); i++)
		{
			xAxis[i + (AxisSize / 2)].x = i;
			xAxis[i + (AxisSize / 2)].y = 0;
			yAxis[i + (AxisSize / 2)].x = 0;
			yAxis[i + (AxisSize / 2)].y = i;
		}

		for (int i = -100; i < 100; i++)
		{
			Line_01[i + 100].x = i;
			Line_01[i + 100].y = 0;
			Line_02[i + 100].x = i;
			Line_02[i + 100].y = 0;
			Line_03[i + 100].x = i;
			Line_03[i + 100].y = 0;
		}

		// 각 그래프 셋팅후 원점기준 좌표로 변경
		SetLinePos(1, 1, 10, Line_01, 200);
		ConvertingPos(Line_01, rect, 200);

		SetLinePos(1, -1, 30, Line_02, 200);
		ConvertingPos(Line_02, rect, 200);

		SetLinePos(2, 3, 60, Line_03, 200);
		ConvertingPos(Line_03, rect, 200);
		
		ConvertingPos(xAxis, rect, AxisSize);
		ConvertingPos(yAxis, rect, AxisSize);

		break;
	case WM_PAINT:
		hdc = BeginPaint(hWnd, &ps);

		for (int i = 0; i < AxisSize; i++)
		{
			//x축 y축 그리기
			SetPixel(hdc, xAxis[i].x, xAxis[i].y, RGB(0, 0, 0));
			SetPixel(hdc, yAxis[i].x, yAxis[i].y, RGB(0, 0, 0));
		}

		for (int i = 0; i < 200; i++)
		{
			SetPixel(hdc, Line_01[i].x, Line_01[i].y, RGB(255, 0, 0));
			SetPixel(hdc, Line_02[i].x, Line_02[i].y, RGB(0, 255, 0));
			SetPixel(hdc, Line_03[i].x, Line_03[i].y, RGB(0, 0, 255));
		}

		EndPaint(hWnd, &ps);
		break;
	case WM_DESTROY:
		PostQuitMessage(0);
		return 0;
	}
	return(DefWindowProc(hWnd, iMessage, wParam, lParam));
}
